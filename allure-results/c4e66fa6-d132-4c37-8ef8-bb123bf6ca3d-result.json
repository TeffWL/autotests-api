{"name": "Get user me", "status": "broken", "statusDetails": {"message": "AttributeError: 'str' object has no attribute 'system'", "trace": "self = <allure_commons._allure.fixture object at 0x1071e2090>, args = (), kwargs = {}\n\n    def __call__(self, *args, **kwargs):\n        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)\n    \n        with self:\n>           return self._fixture_function(*args, **kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n../../projects/bot-python/.venv/lib/python3.12/site-packages/allure_commons/_allure.py:231: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfixtures/allure.py:11: in save_allure_environment_file\n    create_allure_environment_file()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def create_allure_environment_file():\n        # Создаем список из элементов в формате {key}={value}\n        items = [f'{key}={value}' for key, value in settings.model_dump().items()]\n>       items.append(f'os_info={platform.system()}, {platform.release()}')\n                                ^^^^^^^^^^^^^^^\nE       AttributeError: 'str' object has no attribute 'system'\n\ntools/allure/environment.py:10: AttributeError"}, "steps": [{"name": "Get user me", "status": "passed", "steps": [{"name": "Make GET request to '/api/v1/users/me'", "status": "passed", "attachments": [{"name": "cURL command", "source": "30d64f6c-569b-4db0-9695-5809fdd7b9d8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "url", "value": "'/api/v1/users/me'"}, {"name": "params", "value": "None"}], "start": 1752325207265, "stop": 1752325207270}], "start": 1752325207265, "stop": 1752325207270}, {"name": "Check get user response", "status": "passed", "steps": [{"name": "Check user", "status": "passed", "steps": [{"name": "Check that 'id' equals to '5bb1d7a9-f847-43f2-97ac-f75422c283e1'", "status": "passed", "parameters": [{"name": "actual", "value": "'5bb1d7a9-f847-43f2-97ac-f75422c283e1'"}, {"name": "expected", "value": "'5bb1d7a9-f847-43f2-97ac-f75422c283e1'"}, {"name": "name", "value": "'id'"}], "start": 1752325207270, "stop": 1752325207270}, {"name": "Check that 'email' equals to 'jshepard@example.org'", "status": "passed", "parameters": [{"name": "actual", "value": "'jshepard@example.org'"}, {"name": "expected", "value": "'jshepard@example.org'"}, {"name": "name", "value": "'email'"}], "start": 1752325207270, "stop": 1752325207270}, {"name": "Check that 'last_name' equals to 'Schultz'", "status": "passed", "parameters": [{"name": "actual", "value": "'Schultz'"}, {"name": "expected", "value": "'Schultz'"}, {"name": "name", "value": "'last_name'"}], "start": 1752325207270, "stop": 1752325207270}, {"name": "Check that 'first_name' equals to 'Marvin'", "status": "passed", "parameters": [{"name": "actual", "value": "'Marvin'"}, {"name": "expected", "value": "'Marvin'"}, {"name": "name", "value": "'first_name'"}], "start": 1752325207271, "stop": 1752325207271}, {"name": "Check that 'middle_name' equals to 'Kenneth'", "status": "passed", "parameters": [{"name": "actual", "value": "'Kenneth'"}, {"name": "expected", "value": "'Kenneth'"}, {"name": "name", "value": "'middle_name'"}], "start": 1752325207272, "stop": 1752325207272}], "parameters": [{"name": "actual", "value": "UserSchema(id='5bb1d7a9-f847-43f2-97ac-f75422c283e1', email='jshepard@example.org', last_name='Schultz', first_name='Marvin', middle_name='Kenneth')"}, {"name": "expected", "value": "UserSchema(id='5bb1d7a9-f847-43f2-97ac-f75422c283e1', email='jshepard@example.org', last_name='Schultz', first_name='Marvin', middle_name='Kenneth')"}], "start": 1752325207270, "stop": 1752325207272}], "parameters": [{"name": "get_user_response", "value": "GetUserResponseSchema(user=UserSchema(id='5bb1d7a9-f847-43f2-97ac-f75422c283e1', email='jshepard@example.org', last_name='Schultz', first_name='Marvin', middle_name='Kenneth'))"}, {"name": "create_user_response", "value": "CreateUserResponseSchema(user=UserSchema(id='5bb1d7a9-f847-43f2-97ac-f75422c283e1', email='jshepard@example.org', last_name='Schultz', first_name='Marvin', middle_name='Kenneth'))"}], "start": 1752325207270, "stop": 1752325207272}, {"name": "Validate JSON schema", "status": "passed", "parameters": [{"name": "instance", "value": "{'user': {'id': '5bb1d7a9-f847-43f2-97ac-f75422c283e1', 'email': 'jshepard@example.org', 'lastName': 'Schultz', 'firstName': 'Marvin', 'middleName': 'Kenneth'}}"}, {"name": "schema", "value": "{'$defs': {'UserSchema': {'description': 'Описание структуры пользователя.', 'properties': {'id': {'title': 'Id', 'type': 'string'}, 'email': {'format': 'email', 'title': 'Email', 'type': 'string'}, 'lastName': {'title': 'Lastname', 'type': 'string'}, 'firstName': {'title': 'Firstname', 'type': 'string'}, 'middleName': {'title': 'Middlename', 'type': 'string'}}, 'required': ['id', 'email', 'lastName', 'firstName', 'middleName'], 'title': 'UserSchema', 'type': 'object'}}, 'description': 'Описание структуры запроса получения пользователя.', 'properties': {'user': {'$ref': '#/$defs/UserSchema'}}, 'required': ['user'], 'title': 'GetUserResponseSchema', 'type': 'object'}"}], "start": 1752325207272, "stop": 1752325207273}], "attachments": [{"name": "log", "source": "fc77b2f6-6079-4da0-8f3c-f3a2f569920b-attachment.txt", "type": "text/plain"}], "start": 1752325207265, "stop": 1752325207273, "uuid": "b685d257-9a9a-4662-bd14-26a41f7f42b1", "historyId": "31d6e52c7bb261f1e5403958c6bdb3c2", "testCaseId": "31d6e52c7bb261f1e5403958c6bdb3c2", "fullName": "tests.users.test_users.TestUsers#test_get_user_me", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "REGRESSION"}, {"name": "parentSuite", "value": "LMS service"}, {"name": "suite", "value": "Users"}, {"name": "feature", "value": "Users"}, {"name": "epic", "value": "LMS service"}, {"name": "tag", "value": "USERS"}, {"name": "tag", "value": "regression"}, {"name": "tag", "value": "users"}, {"name": "subSuite", "value": "TestUsers"}, {"name": "host", "value": "VIS-SSQ05N"}, {"name": "thread", "value": "78235-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.users.test_users"}]}